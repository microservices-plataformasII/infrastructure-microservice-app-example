trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: terraform-vars

steps:
- checkout: self

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Azure-For-Students-Connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Autenticado en Azure"

      # Configurar las variables de entorno para Terraform
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$(client_id)"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$(client_secret)"
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(subscription_id)"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]$(tenant_id)"
  displayName: "AutenticaciÃ³n en Azure"

- task: TerraformInstaller@1
  inputs:
    terraformVersion: '1.6.6'
  displayName: "Instalar Terraform"

- script: |
    echo "subscription_id = \"$(subscription_id)\"" > terraform.tfvars
  displayName: "Generar terraform.tfvars"

- script: |
    terraform init \
      -backend-config="resource_group_name=terraform-state-rg" \
      -backend-config="storage_account_name=$(tfstate)" \
      -backend-config="container_name=tfstate" \
      -backend-config="key=aks-acr-infra.tfstate"
  displayName: "Terraform Init con backend remoto"
  env:
    ARM_CLIENT_ID: $(client_id)
    ARM_CLIENT_SECRET: $(client_secret)
    ARM_SUBSCRIPTION_ID: $(subscription_id)
    ARM_TENANT_ID: $(tenant_id)

- script: |
    terraform plan -out=tfplan
  displayName: "Terraform Plan"
  env:
    ARM_CLIENT_ID: $(client_id)
    ARM_CLIENT_SECRET: $(client_secret)
    ARM_SUBSCRIPTION_ID: $(subscription_id)
    ARM_TENANT_ID: $(tenant_id)

- script: |
    terraform apply -auto-approve tfplan
  displayName: "Terraform Apply"
  env:
    ARM_CLIENT_ID: $(client_id)
    ARM_CLIENT_SECRET: $(client_secret)
    ARM_SUBSCRIPTION_ID: $(subscription_id)
    ARM_TENANT_ID: $(tenant_id)