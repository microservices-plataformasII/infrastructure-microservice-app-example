trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'Azure-For-Students-Connection'
  resourceGroup: 'devops-infra-rg'
  aksCluster: 'aks-devops-cluster'
  namespace: 'default'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Obteniendo credenciales del AKS..."
      az aks get-credentials --resource-group $(resourceGroup) --name $(aksCluster) --overwrite-existing
  displayName: 'Obtener credenciales del AKS'

- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Obteniendo JWT_SECRET desde Azure Key Vault..."
      JWT_SECRET=$(az keyvault secret show --vault-name "keyvaultlopezmedina" --name "JWT-SECRET" --query value -o tsv)

      echo "Creando secret jwt-secret en AKS..."
      kubectl create secret generic jwt-secret \
        --from-literal=JWT_SECRET=$JWT_SECRET \
        --namespace $(namespace) \
        --dry-run=client -o yaml | kubectl apply -f -
  displayName: 'Inyectar JWT_SECRET desde Key Vault'

- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Aplicando manifiestos de Kubernetes (recursivo)..."
      kubectl apply -R -f manifests/
  displayName: 'Desplegar manifiestos en AKS'

- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureSubscription)
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "Forzando restart de todos los deployments en el namespace $(namespace)..."

      for deployment in $(kubectl get deployments -n $(namespace) -o jsonpath='{.items[*].metadata.name}'); do
        echo "Reiniciando $deployment..."
        kubectl rollout restart deployment $deployment -n $(namespace)
      done
  displayName: 'Reiniciar deployments uno por uno'

