services:
  users-api:
    image: users-api:1.0
    build:
      context: ./users-api-microservice-app-example
    environment:
      - JWT_SECRET=PRFT
      - SERVER_PORT=8083
    ports:
      - "8083:8083"

  auth-api:
    image: auth-api:1.0
    build:
      context: ./auth-api-microservice-app-example
    environment:
      - JWT_SECRET=PRFT
      - AUTH_API_PORT=8000
      - USERS_API_ADDRESS=http://users-api:8083
    ports:
      - "8000:8000"
    depends_on:
      - users-api

  todos-api:
    image: todos-api:1.0
    build:
      context: ./todos-api-microservice-app-example
    environment:
      - TODO_API_PORT=8082
      - JWT_SECRET=PRFT
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    ports:
      - "8082:8082"
    depends_on:
      - redis

  log-message-processor:
    image: log-message-processor:1.0
    build:
      context: ./log-message-processor-microservice-app-example
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis

  frontend:
    image: frontend-microservice:1.0
    container_name: frontend-container
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - AUTH_API_ADDRESS=http://auth-api:8000
      - TODOS_API_ADDRESS=http://todos-api:8082
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    depends_on:
      - auth-api
      - todos-api
      - redis
      - zipkin

  redis:
    image: redis:latest
    container_name: redis
    # Eliminamos el bind del puerto para evitar conflictos con Redis local
    # Si necesitas exponerlo, cambia por "6379:6379"
    # ports:
    #   - "6379:6379"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
